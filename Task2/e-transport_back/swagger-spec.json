{
    "openapi": "3.0.0",
    "paths": {
        "/": {
            "get": {
                "operationId": "AppController_getHello",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "App"
                ]
            }
        },
        "/user": {
            "get": {
                "operationId": "UserController_findAllUser",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of all users returned successfully."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "post": {
                "operationId": "UserController_createUser",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully."
                    },
                    "400": {
                        "description": "Invalid input data."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "user"
                ]
            }
        },
        "/user/{id}": {
            "put": {
                "operationId": "UserController_updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "delete": {
                "operationId": "UserController_deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "get": {
                "operationId": "UserController_getUserDetails",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details returned successfully."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "user"
                ]
            }
        },
        "/rental": {
            "get": {
                "operationId": "RentalController_findAllRental",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of all rentals returned successfully."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "rental"
                ]
            },
            "post": {
                "operationId": "RentalController_createRental",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RentalDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rental created successfully."
                    },
                    "400": {
                        "description": "Invalid input data."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "rental"
                ]
            }
        },
        "/rental/{id}": {
            "put": {
                "operationId": "RentalController_updateRental",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRentalDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rental updated successfully."
                    },
                    "404": {
                        "description": "Rental not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "rental"
                ]
            },
            "delete": {
                "operationId": "RentalController_deleteRental",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rental deleted successfully."
                    },
                    "404": {
                        "description": "Rental not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "rental"
                ]
            }
        },
        "/payment": {
            "get": {
                "operationId": "PaymentController_findAllPayment",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of all payments returned successfully."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "payment"
                ]
            },
            "post": {
                "operationId": "PaymentController_createPayment",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment created successfully."
                    },
                    "400": {
                        "description": "Invalid input data."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "payment"
                ]
            }
        },
        "/payment/{id}": {
            "put": {
                "operationId": "PaymentController_updatePayment",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePaymentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment updated successfully."
                    },
                    "404": {
                        "description": "Payment not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "payment"
                ]
            },
            "delete": {
                "operationId": "PaymentController_deletePayment",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment deleted successfully."
                    },
                    "404": {
                        "description": "Payment not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "payment"
                ]
            }
        },
        "/vehicle": {
            "get": {
                "operationId": "VehicleController_findAllVehicle",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of all vehicles returned successfully."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "vehicle"
                ]
            },
            "post": {
                "operationId": "VehicleController_createVehicle",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle created successfully."
                    },
                    "400": {
                        "description": "Invalid input data."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "vehicle"
                ]
            }
        },
        "/vehicle/{id}": {
            "put": {
                "operationId": "VehicleController_updateVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVehicleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle updated successfully."
                    },
                    "404": {
                        "description": "Vehicle not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "vehicle"
                ]
            },
            "delete": {
                "operationId": "VehicleController_deleteVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle deleted successfully."
                    },
                    "404": {
                        "description": "Vehicle not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "vehicle"
                ]
            }
        },
        "/battery": {
            "get": {
                "operationId": "BatteryController_findAllBattery",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of all batteries returned successfully."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "battery"
                ]
            },
            "post": {
                "operationId": "BatteryController_createBattery",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BatteryDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Battery created successfully."
                    },
                    "400": {
                        "description": "Invalid input data."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "battery"
                ]
            }
        },
        "/battery/{id}": {
            "put": {
                "operationId": "BatteryController_updateBattery",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBatteryDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Battery updated successfully."
                    },
                    "404": {
                        "description": "Battery not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "battery"
                ]
            },
            "delete": {
                "operationId": "BatteryController_deleteBattery",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Battery deleted successfully."
                    },
                    "404": {
                        "description": "Battery not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "battery"
                ]
            }
        },
        "/rental-vehicle": {
            "get": {
                "operationId": "RentalVehicleController_findAllRentalVehicle",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of all rental vehicles returned successfully."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "rental-vehicle"
                ]
            },
            "post": {
                "operationId": "RentalVehicleController_createRentalVehicle",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RentalVehicleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rental vehicle created successfully."
                    },
                    "400": {
                        "description": "Invalid input data."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "rental-vehicle"
                ]
            }
        },
        "/rental-vehicle/{id}": {
            "put": {
                "operationId": "RentalVehicleController_updateRentalVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRentalVehicleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rental vehicle updated successfully."
                    },
                    "404": {
                        "description": "Rental vehicle not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "rental-vehicle"
                ]
            },
            "delete": {
                "operationId": "RentalVehicleController_deleteRentalVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rental vehicle deleted successfully."
                    },
                    "404": {
                        "description": "Rental vehicle not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "rental-vehicle"
                ]
            }
        },
        "/battery-vehicle": {
            "get": {
                "operationId": "BatteryVehicleController_findAllBatteryVehicle",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of all battery vehicles returned successfully."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "battery-vehicle"
                ]
            },
            "post": {
                "operationId": "BatteryVehicleController_createBatteryVehicle",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BatteryVehicleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Battery vehicle created successfully."
                    },
                    "400": {
                        "description": "Invalid input data."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "battery-vehicle"
                ]
            }
        },
        "/battery-vehicle/{id}": {
            "put": {
                "operationId": "BatteryVehicleController_updateBatteryVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBatteryVehicleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Battery vehicle updated successfully."
                    },
                    "404": {
                        "description": "Battery vehicle not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "battery-vehicle"
                ]
            },
            "delete": {
                "operationId": "BatteryVehicleController_deleteBatteryVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Battery vehicle deleted successfully."
                    },
                    "404": {
                        "description": "Battery vehicle not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "tags": [
                    "battery-vehicle"
                ]
            }
        }
    },
    "info": {
        "title": "e-transport",
        "description": "The e-transport API description",
        "version": "1.0",
        "contact": {}
    },
    "tags": [],
    "servers": [],
    "components": {
        "schemas": {
            "UserDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "bonusAccount": {
                        "type": "string"
                    },
                    "notification": {
                        "type": "boolean"
                    },
                    "photo": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "USER",
                            "MODERATOR",
                            "TECHNICIAN"
                        ]
                    }
                },
                "required": [
                    "email",
                    "name",
                    "password",
                    "phoneNumber",
                    "bonusAccount",
                    "notification",
                    "photo",
                    "role"
                ]
            },
            "UpdateUserDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "bonusAccount": {
                        "type": "string"
                    },
                    "photo": {
                        "type": "string"
                    },
                    "notification": {
                        "type": "boolean"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "USER",
                            "MODERATOR",
                            "TECHNICIAN"
                        ]
                    }
                },
                "required": [
                    "role"
                ]
            },
            "RentalDto": {
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "dateRented": {
                        "type": "string"
                    },
                    "dateReturned": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "distance": {
                        "type": "number"
                    },
                    "avgSpeed": {
                        "type": "number"
                    },
                    "maxSpeed": {
                        "type": "number"
                    },
                    "energyConsumed": {
                        "type": "number"
                    }
                },
                "required": [
                    "isActive",
                    "dateRented",
                    "dateReturned",
                    "userId",
                    "distance",
                    "avgSpeed",
                    "maxSpeed",
                    "energyConsumed"
                ]
            },
            "UpdateRentalDto": {
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "dateRented": {
                        "type": "string"
                    },
                    "dateReturned": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "distance": {
                        "type": "number"
                    },
                    "avgSpeed": {
                        "type": "number"
                    },
                    "maxSpeed": {
                        "type": "number"
                    },
                    "energyConsumed": {
                        "type": "number"
                    }
                }
            },
            "PaymentDto": {
                "type": "object",
                "properties": {
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "VISA",
                            "PAYPAL",
                            "MASTERCARD",
                            "OTHER"
                        ]
                    },
                    "amount": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    },
                    "rentalId": {
                        "type": "string"
                    }
                },
                "required": [
                    "paymentMethod",
                    "amount",
                    "date",
                    "rentalId"
                ]
            },
            "UpdatePaymentDto": {
                "type": "object",
                "properties": {
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "VISA",
                            "PAYPAL",
                            "MASTERCARD",
                            "OTHER"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    },
                    "rentalId": {
                        "type": "string"
                    }
                },
                "required": [
                    "paymentMethod"
                ]
            },
            "VehicleDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "FREE",
                            "INUSE",
                            "NOTAVAILABLE",
                            "BROKEN",
                            "REPAIR"
                        ]
                    },
                    "runnedDistance": {
                        "type": "number"
                    },
                    "releaseDate": {
                        "type": "string"
                    },
                    "currentLocation": {
                        "type": "string"
                    }
                },
                "required": [
                    "status",
                    "runnedDistance",
                    "releaseDate",
                    "currentLocation"
                ]
            },
            "UpdateVehicleDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "FREE",
                            "INUSE",
                            "NOTAVAILABLE",
                            "BROKEN",
                            "REPAIR"
                        ]
                    },
                    "runnedDistance": {
                        "type": "number"
                    },
                    "releaseDate": {
                        "type": "string"
                    },
                    "currentLocation": {
                        "type": "string"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "BatteryDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "INUSE",
                            "NOTINUSE",
                            "BROKEN",
                            "CHARGING",
                            "REPAIR"
                        ]
                    },
                    "chargeLevel": {
                        "type": "number"
                    },
                    "condition": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "LithiumIon",
                            "LithiumManganese",
                            "LeadAcid"
                        ]
                    },
                    "capacity": {
                        "type": "number"
                    }
                },
                "required": [
                    "status",
                    "chargeLevel",
                    "condition",
                    "type",
                    "capacity"
                ]
            },
            "UpdateBatteryDto": {
                "type": "object",
                "properties": {
                    "chargeLevel": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "INUSE",
                            "NOTINUSE",
                            "BROKEN",
                            "CHARGING",
                            "REPAIR"
                        ]
                    },
                    "condition": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "LithiumIon",
                            "LithiumManganese",
                            "LeadAcid"
                        ]
                    },
                    "capacity": {
                        "type": "number"
                    }
                },
                "required": [
                    "status",
                    "type"
                ]
            },
            "RentalVehicleDto": {
                "type": "object",
                "properties": {
                    "vehicleId": {
                        "type": "string"
                    },
                    "rentalId": {
                        "type": "string"
                    }
                },
                "required": [
                    "vehicleId",
                    "rentalId"
                ]
            },
            "UpdateRentalVehicleDto": {
                "type": "object",
                "properties": {
                    "vehicleId": {
                        "type": "string"
                    },
                    "rentalId": {
                        "type": "string"
                    }
                }
            },
            "BatteryVehicleDto": {
                "type": "object",
                "properties": {
                    "vehicleId": {
                        "type": "string"
                    },
                    "batteryId": {
                        "type": "string"
                    }
                },
                "required": [
                    "vehicleId",
                    "batteryId"
                ]
            },
            "UpdateBatteryVehicleDto": {
                "type": "object",
                "properties": {
                    "vehicleId": {
                        "type": "string"
                    },
                    "batteryId": {
                        "type": "string"
                    }
                }
            }
        }
    }
}